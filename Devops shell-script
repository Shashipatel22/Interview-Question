1 - Explain DevOps? 

>>The DevOps is a combination of two words one is software Development, and second is Operations. 
It allows a single team to handle the entire application lifecycle, from development to testing, deployment, and operations. 
DevOps helps you to reduce the disconnection between software developers, quality assurance (QA) engineers, and system administrators.

2 - Why has DevOps become famous?
As we know before DevOps there are two other software development models:

Waterfall model
Agile model
In the waterfall model, we have limitations of one-way working and lack of communication with customers. This was overcome in Agile by including
the communication between the customer and the company by taking feedback. But in this model, another issue is faced regarding communication between 
the Development team and operations team due to which there is a delay in the speed of production. This is where DevOps is introduced. It bridges the 
gap between the development team and the operation team by including the automation feature. Due to this, the speed of production is increased. 
By including automation, testing is integrated into the development stage. Which resulted in finding the bugs at the very initial stage which increased 
the speed and efficiency.

3 - What are the principles of DevOps?
The principles behind DevOps are:

Continuous deployment
Infrastructure as code
Automation
Monitoring
Security

4 - How DevOps is helpful to developers?
DevOps is very helpful for developers to fix the bugs and quickly implement the new features. It also helps in more transparent communication 
between the team members.

5 - Explain some popular tools of DevOps?
Here are some popular tools of DevOps, such as:

Jenkins:- Jenkins is a DevOps tool for monitoring the execution of repeated tasks. Jenkins is a software that allows continuous integration. 
And it will be installed on a server where the central build will take place.

Ansible:- Ansible is a leading DevOps tool. Ansible is an open-source IT engine that automates application deployment, 
cloud provisioning, intra service orchestration, and other IT tools.

Nagios:- Nagios is one of the more useful tools for DevOps. It can determine the errors and rectify them with the help of network, infrastructure, 
server, and log monitoring systems.

Docker:- Docker is a high-end DevOps tool that allows building, ship, and run distributed applications on multiple systems.

Git:- Git is an open-source distributed version control system that is freely available for everyone. It is designed to handle minor to major
projects with speed and efficiency.

6 - What are the prerequisites for the DevOps implementation?
Following are some useful prerequisites for DevOps implementation:

Proper communication between the team members.
At least one version control software.
Automated testing.
Automated deployment.

7 - What are the different phases in DevOps?
The various phases of the DevOps lifecycle are as follows:

Plan - Initially, there should be a plan for the type of application that needs to be developed. Getting a rough picture of the development process is always a good idea.
Code - The application is coded as per the end-user requirements. 
Build - Build the application by integrating various codes formed in the previous steps.
Test - This is the most crucial step of the application development. Test the application and rebuild, if necessary.
Integrate - Multiple codes from different programmers are integrated into one.
Deploy - Code is deployed into a cloud environment for further usage. It is ensured that any new changes do not affect the functioning of a high traffic website.
Operate - Operations are performed on the code if required.
Monitor - Application performance is monitored. Changes are made to meet the end-user requirements.

8 - What are the key components of DevOps?
The most important key components of DevOps are:

Continuous integration
Continuous testing
Continuous delivery
Continuous mongering

9 - Mention some of the core benefits of DevOps.
The core benefits of DevOps are as follows:

Technical benefits
Continuous software delivery
Less complex problems to manage
Early detection and faster correction of defects
Business benefits
Faster delivery of features
Stable operating environments
Improved communication and collaboration between the teams

10 - How is DevOps different from agile methodology?
DevOps is a culture that allows the development and the operations team to work together. This results in continuous development, testing, integration, 
deployment, and monitoring of the software throughout the lifecycle. 

11 - What are the fundamental differences between DevOps & Agile?

>>DevOps is a culture, fostering collaboration amongst all participants involved in the development and maintenance of software. 
Agile can be described as a development methodology designed to maintain productivity and drive releases with the common reality of changing needs.

12 - what is continous delivery and continous deployment 

---Continous delivery
>>Continuous delivery is a software development practice that uses automation to speed the release of new code. It establishes a process through which a developer's 
changes to an application can be pushed to a code repository or container registry through automation

---Continous deployment
>>Continuous deployment (CD, or CDE) is a strategy or methodology for software releases where any new code update or change made through the rigorous automated test 
process is deployed directly into the live production environment, where it will be visible to customers.


13 - What is the difference between continuous delivery and continuous deployment?

>>The difference between continuous delivery and continuous deployment is the presence of a manual approval to update to production. 
With continuous deployment, production happens automatically without explicit approval. Continuous delivery automates the entire software release process

14 - Which scripting tools are used in DevOps?

>>Both Python and Ruby scripting tools are used in the DevOps.

15 - Why open source tools boost DevOps?

>>Open source tools mainly used by any organization which is adapted by DevOps pipeline because DevOps came with the focus of automation 
in various aspects of organization build, release, change management, and infrastructure management areas.

16 - What is the role of AWS in DevOps?

>>AWS is a cloud-based service provided by Amazon that ensures scalability through unlimited computing power and storage. 
It empowers IT enterprises to develop and deliver experienced products and deploy applications on the cloud

17 - Explain two-factor authentication?
The two-factor authentication is a security method in which the user provides two ways of identification from separate categories.

18 - Name some network monitoring tools?

Some most essential network monitoring tools are:

Nagios
OpenNMS
Splunk
Icinga 2
Wireshark

19 - Which makes AWS DevOps highly accessible?
Here are some reasons which make AWS DevOps a highly popular, such as:

AWS CloudFormation
AWS EC2
AWS CloudWatch
AWS CodePipeline

20 - What is the Build in DevOps?
The build is a method in which the source code is put together to check whether it works as a single unit. 
In the build creation process, the source code will undergo compilation, testing, inspection, and deployment

21 -  What is Continuous Testing?
Continuous Testing constitutes the running of automated tests as part of the software delivery pipeline to provide 
instant feedback on the business risks present in the most recent release. In order to prevent problems in step-switching
in the Software delivery life-cycle and to allow Development teams to receive immediate feedback, every build is continually 
tested in this manner. This results in significant increase in speed in a developer's productivity as it eliminates the requirement 
for re-running all the tests after each update and project re-building

22 - What is Automation Testing?
Test automation or manual testing Automation is the process of automating a manual procedure in order to test an application or system.
Automation testing entails the use of independent testing tools that allow you to develop test scripts that can be run repeatedly without
the need for human interaction.

Helps to save money and time.
Unattended execution can be easily done.
Huge test matrices can be easily tested.
Parallel execution is enabled.

23 - what is infrastructure deployment

two ways to build infrastructure deployment

1-cloud native tools
a)-aws    -->cloud formation  yaml or json uses
b)-azure  -->arm templates
code is heavy in aws and azure

2-third party tools (terraform)
>>hashicorp tool it is an open-souce
>>it is famous it is easy to use and understand
>>it support to all clouds
>>terraform have idempotnce

24-what is configuration mangement

>>it is used to configure the servers or users any updates or use to regular operations

tools:-
1-chef
2-puppet
3-ansible
4-rundeck
5-salt

=======================================GITHUB==================================================================================================

1 - What is Git?
Git is a version control system for tracking changes in computer files and is used to help coordinate work among several people on a project while
tracking progress over time. In other words, it’s a tool that facilitates source code management in software development.

Git favors both programmers and non-technical users by keeping track of their project files. It enables multiple users to work together and handles
large projects efficiently.

Advantgaes:-
Faster release cycles
Easy team collaboration
Widespread acceptance 
Maintains the integrity of source code
Pull requests

Benfites:-
Data replication and redundancy are both possible.
It is a service with high availability.
There can only be one Git directory per repository.
Excellent network and disc performance are achieved.
On any project, collaboration is very simple.

2 - What is GitHub?

To provide Internet hosting for version control and software development, GitHub makes use of Git.

3 - Mention some popular Git hosting services.

GitHub
SourceForge
GitLab
Bitbucket

4 - Different types of version control systems

Local version control systems have a database that stores all file changes under revision control on disc in a special format.
Centralized version control systems have a single repository, from which each user receives their working copy.
Distributed version control systems contain multiple repositories, and different users can access each one with their working copy.

5 - What’s the difference between Git and GitHub?

Git:-
1-Git is a software
2-Git can be installed locally on the system
3-Provides a desktop interface called git GUI
4-It does not support user management features

github:-
1-GitHub is a service
2-GitHub is hosted on the web
3-Provides a desktop interface called GitHub Desktop.
4-Provides built-in user management

6 - What is a Git repository?

Git repository refers to a place where all the Git files are stored. These files can either be stored on the local repository or on the remote repository.

7 - What does the git push command do?

The Git push command is used to push the content in a local repository to a remote repository. After a local repository has been modified,
a push is executed to share the modifications with remote team members.

8 - What do you understand about the Git merge conflict?
A Git merge conflict is an event that occurs when Git is unable to resolve the differences in code between the two commits automatically. 

Git is capable of automatically merging the changes only if the commits are on different lines or branches.

9 - how to solve merge conflicts
>>Person A is the one who decides when to incorporate new changes from master, so Person A will perform the merge. Person A should certainly attempt to resolve merge conflicts on their own, 
but if any questions arise then both Person A and Person B should sit together and resolve the conflicts together

10 - what is merge and rebase
>>Git merge is a command that allows you to merge branches from Git. Git rebase is a command that allows developers to integrate changes from one branch to another. 
In Git Merge logs will be showing the complete history of the merging of commits.

11 - what is the differnce between merge and rebase

>>Merging is a safe option that preserves the entire history of your repository, while rebasing creates a linear history by moving your feature branch onto the tip of main 

12 - what is rebase
>>Rebasing is the process of moving or combining a sequence of commits to a new base commit. Rebasing is most useful and easily visualized in the context of a feature branching workflow.

13 - what is the differnce between merge and pull request
>>The git pull command first runs git fetch which downloads content from the specified remote repository. 
Then a git merge is executed to merge the remote content refs and heads into a new local merge commit. 
To better demonstrate the pull and merging process let us consider the following example.

14 - what is git reset hard???
>>Summary. To review, git reset is a powerful command that is used to undo local changes to the state of a Git repo. Git reset operates on "The Three Trees of Git". 
These trees are the Commit History ( HEAD ), the Staging Index, and the Working Directory.
                or
>>git reset --hard , which will completely destroy any changes and remove them from the local directory.

15 - what is git reset soft???
>>git reset --soft , which will keep your files, and stage all changes back automatically

16 - what is git stash
>>git stash temporarily shelves (or stashes) changes you've made to your working copy so you can work on something else, and then come back and re-apply them later on.

17 - Tell me the difference between git pull and git fetch?
Both of these commands will fetch any new commits from the remote repository, but they differ in how they handle these commits.

Git pull will merge the remote commits into the current branch, while git fetch will simply retrieve the commits and store them in the local repository. 
This means that if you have any uncommitted changes, git pull may result in merge conflicts, while git fetch will not

18 - Difference between “pull request” and “branch”?
“Pull request” is done when you feel like changing the developer’s change to another person's code branch. And “Branch” is just a separate version of code

19 - What is a branch in Git?
A branch is a way to isolate development work on a particular aspect of a project. When a branch is created, it diverges from the primary branch. It allows 
developers to work on a new feature or bug fix without affecting the main codebase.

20 -  What is a commit in Git?
A commit is a way to save changes to a branch. When a commit is made, a snapshot of the current state of the branch is created. 
This snapshot can be used to revert the branch to that state if necessary.

21 - what is trufflehog and how to use it
>>Now, on to the more popularly used scanning tool — truffleHog. This GitHub repository scanner will look into your commit 
history and spot anything that looks like a password or confidential information using regex and entropy.

=======================================================Jenkins===========================================================================================
                           
1 - what is jenkins what will do jenkins and what is highly available jenkins

>>Jenkins is an open-source automation tool written in Java with plugins built for continuous integration. Jenkins is used to build and test your 
software projects continuously making it easier for developers to integrate changes to the project, and making it easier for users to obtain a fresh build.

highly available jenkins:-
>>All Jenkins instances within the Region can access the Amazon EFS file system and data durably stored in multiple Availability Zones. 
If a single Availability Zone experiences an outage, the Jenkins file system is still accessible from other Availability Zones providing HA for the storage laye

Why Jenkins is important?
>>Jenkins is used today along the entire software development lifecycle, enabling the integration and automation of different processes, including building, testing, 
and deployment. Jenkins creates 'pipelines', which define the series of steps that the server will take to perform the required tasks.

>>jenkins is on open-source tool    (cloudbess is also a jenkins tools it is an enterprise level) 
>>jenkins is ci/cd tool continoud integration and continous deployment and deliver 
>>jenkins nothing can do without plugins
>>jenkins works on java programming
>>you can develop your own plugins and you can use that plugins

2 - what language is used in jenkins pipeline

>>Groovy programming language
Pipelines are Jenkins jobs enabled by the Pipeline (formerly called “workflow”) plugin and built with simple text scripts that use a Pipeline DSL (domain-specific language)
 based on the Groovy programming language

3 - what is the use of jenkins slave 

>>Slaves can run on a variety of operating systems. The job of a Slave is to do as they are told to, which involves executing build jobs dispatched by the Master


4 - what is on-demand-slave in jenkins

>>Slaves are Jenkins agents it's used to execute jobs scheduled by the master. But there we need lots of different slaves with their respective tools. 
For example, one slave is configured for maven to run a java application, one is for docker, and so on

5 - How many slaves can Jenkins have?
1-200 is the range you can get to without having to *heavily* tune GC or change some Jenkins hidden properties

6 - what is role-based-access-control in jenkins

>>The Role Strategy plugin is meant to be used from Jenkins to add a new role-based mechanism to manage users' permissions. Supported features. Creating global roles, 
such as admin, job creator, anonymous, etc., allowing to set Overall, Agent, Job, Run, View and SCM permissions on a global basis

7 - what is jenkins pipeline and types of pipeline

>>In Jenkins, a pipeline is a collection of events or jobs which are interlinked with one another in a sequence. 
It is a combination of plugins that support the integration and implementation of continuous delivery pipelines using Jenkins

Types:-
1-declartive
2-scripted

8 - what is the differnce between scripted pipeline and declartive pipeline

>>Declarative: Declarative pipeline supports the Environment block. Environment block helps to define global variables and load credentials into the pipeline. 
Scripted: The scripted pipeline does not support Environment block but you can define global variables and use credentials in a different way using Groovy.

2-declartive pipeline
>>we always preferd to use the declartive pipeline,bcoz of the advantages associated
1-complete pipeline validation before executing
2-if the pipeline is not good means if any syntax error means its not build the pipeline 
like scripted will build to stop the stage like we converted 4 stages the syntax error 
in 3 stage that stage will get an error in scripted pipeline
3-restart at one particular stage.
4-good when applying conditional statements when compared to scripted pipeline

9 - do you worked on the multi-branch pipeline and use case of multi-branch pipeline

>>yes i worked on multi-branch pipeline we have blue-ocean inplace, we are using blue-ocean  
so that the blue-ocean give very good graphical representation to manage the multi-branch pipline
we have like dev-env and prod-env when ever the commit is done it will be build 

10 - what is the use of active directory in jenkins

>>With this plugin, you can configure Jenkins to authenticate the username and the password through Active Directory. 
This plugin internally uses two very different implementations, depending on whether Jenkins is running on Windows or non-Windows and if you specify a domain.

11 - What is a CI/CD pipeline?
CI/CD Pipeline or Continuous Integration/ Continuous Delivery is considered the DevOps approach's backbone. 
The pipeline is responsible for building codes, running tests, and deploying new software versions.

12 - Name some of the useful plugins in Jenkins.
Some of the plugins in Jenkins include:

Maven 2 project
Amazon EC2
Copy artifact
Join
HTML publisher
Green Balls

13 - How can you create a backup and copy files in Jenkins?

Jenkins stores all the settings, builds scripts, and logs in the home directory. 
Then, if you want to create a backup of this Jenkins set up all you have to do is copy this directory. 
The job directory may also be copied to clone a job or rename the directory.

14 - Name some more continuous Integration tools other than Jenkins.
Some of the top continuous integration tools other than Jenkins are:

TeamCity
Travis CI
Go CD
Bamboo
GitLab CI
CircleCI
Codeship

15 - Assume that you have a pipeline. The first job that you performed was successful, but the second one failed.  What would you do now?

>>You don't have to worry, and you just have to restart the pipeline from the point where it failed by doing 'restart from stage.'

16 - Explain the process in which Jenkins works?
Here’s the process in which Jenkins works:

Jenkins checks changes in repositories regularly, and developers must secure their code regularly. 
Once the changes are defined, Jenkins detects them and uses them to prepare a new build.
After that, Jenkins will transverse through various stages in its usual pipeline. As one stage completes, the process will move further on to the next stage.
If a stage fails, the Jenkins build will stop there, and the software will email the team using it. When completed successfully, 
the code implements itself in the proper server so that testing begins.
After the successful testing phase, Jenkins shares the results with the team using it.

17 - What is Jenkinsfile? 

Jenkins file is a text file that has a definition of a Jenkins pipeline and is checked into the source control repository.
It enables code review and iteration on the pipeline. It also permits an audit trail for the pipeline.

18 - Differentiate between Maven, Ant, and Jenkins.

Maven:-
Build tool
Perform build operations 

ANT:-
Build tool
Perform build operations 

Jenkins:-
Continuous Integration tool
Jenkins may run unit tests and deploy applications

19 - Why is Jenkins used with Selenium?

Using Selenium allows Jenkins’s testing whenever there are any software changes or any changes in the environment. 
When the Selenium test suite is integrated with Jenkins, the testing part is also automated as part of the build process.

20 - what is the multi-branch pipeline.What is the process of making a Multibranch Pipeline in Jenkins?

>>What's a Jenkins Multibranch Pipeline? A multibranch job is simply a folder of pipeline jobs. For every branch you have, Jenkins will create a folder.
So instead of creating a pipeline job for each of the branches you have in a git repository, you could use a multibranch job.

>>To create a Multibranch Pipeline in Jenkins, follow the following steps:

Open the Jenkins dashboard and create a new item by clicking on 'new item'
Enter the project name and, from the options, select 'Multibranch pipeline'
Click on OK
pipeline

Source: https://www.jenkins.io/doc/book/pipeline/multibranch/

Then select the repository location, branch source (GitHub/Bitbucket), and add the branch source credentials.
Save the project
Now, Jenkins automatically creates new Multibranch Pipelines for repositories
Then to connect to the GitHub repo, we need the HookURL
To get this URL from the repository settings, add this HookURL to the Webhooks section
Once the jobs are created, Jenkins will automatically trigger the build

============================================================Docker=========================================================================================

1 - what is docker and conatiner how to use in docker containers

>>Docker is an open-source containerization platform. It is used to automate the deployment of any application, using lightweight, portable containers.


Features;-
Application agility
Developer productivity
Easy modeling
Operational efficiencies
Placement and affinity
Version control

--disadvantages:-
>>Docker is not good for application that requires rich GUI.
>>It is difficult to manage large amount of containers.
>>Docker does not provide cross-platform compatibility means if an application is designed to run in a Docker container on windows, then it cannot run on Linux Docker container.
>>container is process it can fail anytime
--Advantages
>>Caching a cluster of containers.
>>Flexible resource sharing.
>>Scalability - many containers can be placed in a single host.
>>Running your service on hardware that is much cheaper than standard servers.

2 - Name and explain the various Docker components.
The three main Docker components are:

Docker Client. Performs Docker build pull and run operations to open up communication with the Docker Host. 
The Docker command then employs Docker API to call any queries to run.
Docker Host. Contains Docker daemon, containers, and associated images. The Docker daemon establishes a connection with the Registry. 
The stored images are the type of metadata dedicated to containerized applications.
Registry. This is where Docker images are stored. There are two of them, a public registry and a private one. 
Docker Hub and Docker Cloud are two public registries available for use by anyone.

3 - why everyone using production environment in kubernets and why not using docker and docker swarm

>>The major difference between the platforms is based on complexity. Kubernetes is well suited for complex applications. 
On the other hand, Docker Swarm is designed for ease of use, making it a preferable choice for simple applications

>>kubernets have additional network plugins thats why using kubernets and this is this reason docker swarm not using
plugins ex:-panel and kolak 

4 - what is the problems in persistent storage in docker

>>One common challenge with many cloud-native technologies is persistent data storage. Containers, serverless functions, and apps deployed using an 
immutable infrastructure model don't typically offer a way to store data permanently because all internal data is destroyed when the application shuts down

5 - What is a container?

>>it is processing machine or servie runing on linux
>>Containers are deployed applications bundled with all necessary dependencies and configuration files. All of the elements share the same OS kernel. 
Since the container isn’t tied to any one IT infrastructure, it can run on a different system or the cloud.

6 - Explain virtualization.
Virtualization is the means of employing software (such as Hypervisor) to create a virtual version of a resource such as a server, data storage, or application. 
Virtualization lets you divide a system into a series of separate sections, each one acting as a distinct individual system. 
The virtual environment is called a virtual machine

7 - What’s the difference between virtualization and containerization?
Virtualization is an abstract version of a physical machine, while containerization is the abstract version of an application.

8 - Last simple question…Describe a Docker container’s lifecycle.
Although there are several different ways of describing the steps in a Docker container’s lifecycle, the following is the most common:

Create container
Run container
Pause container
Unpause container
Start container
Stop container
Restart container
Kill container
Destroy container

9 - Name the essential Docker commands and what they do.
The most critical Docker commands are:

Build. Builds a Docker image file
Commit. Creates a new image from container changes
Create. Creates a new container
Dockerd. Launches Docker daemon
Kill. Kills a container

10 - What are Docker object labels?

Labels are the mechanism for applying metadata to Docker objects such as containers, images, local daemons, networks, volumes, and nodes.

11 - what is nodes in docker 

>>A node is an instance of the Docker engine participating in the swarm. You can also think of this as a Docker node. You can run one or more nodes on a single physical computer or cloud server, 
but production swarm deployments typically include Docker nodes distributed across multiple physical and cloud machines

12 - what docker volumes and mounts explain briefly.How do you find stored Docker volumes?

>>Docker volumes are dependent on Docker's file system and are the preferred method of persisting data for Docker containers and services. When a container is started, Docker loads the read-only image layer, 
adds a read-write layer on top of the image stack, and mounts volumes onto the container filesystem

Use the command: /var/lib/docker/volumes

13 - can you write a docker file???

--vi Dockerfile
FROM ubuntu
LABEL  owner=kanji5413@gmail.com
RUN apt-get update; \
    apt install -y nginx vi nano wget curl net-tools; \
    mkdir /myapp 
RUN groupadd -r mongodb && useradd -r -g mongodb mongodb
WORKDIR /myapp
#CMD ["nginx", "-g", "daemon off;"]
USER mongodb

:wq

>>docker build .       -->. means present directory 

14 - what is docker compose and docker stack

>>docker compose will allow developer or devops person to create multiple containers and it will save 
lot time .and its not for production purpose it is only per tseting. if the container get stopped the 
web application will be face down-time. it is only for one server. if you want install multiple servers you need to use docker-stack

>>docker stack:-Docker Stack is run across a Docker Swarm, which is essentially a group of machines running the Docker daemon, which are grouped together,
essentially pooling resources. Stacks allow for multiple services, which are containers distributed across a swarm, to be deployed and grouped logically

15 - what is docker swarm 

>>A Docker Swarm is a group of either physical or virtual machines that are running the Docker application and that have been configured to join together in a cluster.
The activities of the cluster are controlled by a swarm manager, and machines that have joined the cluster are referred to as nodes.

>>Summary. The Docker Swarm mode allows an easy and fast load balancing setup with minimal configuration. Even though the swarm itself already performs 
a level of load balancing with the ingress mesh, having an external load balancer makes the setup simple to expand upon

16 - what is docker swarm is quoram 

>>In a swarm of N managers, a quorum (a majority) of manager nodes must always be available. For example, in a swarm with five managers,
 a minimum of three must be operational and in communication with each other

17 - why quoram needs an odd number
>>quoram is an latein word
>>minimum number of nodes in swarm cluster that needs to be up and running for swarm cluster to work

18 - what is docker ingress and docker gateway-bridge
>>The docker_gwbridge is a bridge network that connects the overlay networks (including the ingress network) to an individual Docker daemon's physical network. 
By default, each container a service is running is connected to its local Docker daemon host's docker_gwbridge network

19 - what is ingress controller
>>The Ingress Controller is an application that runs in a cluster and configures an HTTP load balancer according to Ingress resources. 
The load balancer can be a software load balancer running in the cluster or a hardware or cloud load balancer running externally

20 - what is roolingupdate in docker
>>The scheduler applies rolling updates as follows by default: Stop the first task. Schedule update for the stopped task. 
Start the container for the updated task. If the update to a task returns RUNNING , wait for the specified delay period then start the next task

21 - what is in efk stack in docker
>>EFK Stack is an enterprise-ready log aggregation and logs analysis framework for bare-metal and container infrastructure. 
But before deploying an EFK stack, you'll first set up a project directory and create a Docker configuration for deploying EFK Stack on your Docker host

22 - what is java memory leak 
>>A Memory Leak is a situation where there are objects present in the heap that are no longer used, but the garbage collector is unable to remove them from memory, 
and therefore, they're unnecessarily maintained.A memory leak is bad because it blocks memory resources and degrades system performance over time

>>How do you fix a memory leak in Java?

Using the java. lang. ref package, you can work with the garbage collector in your program. 
This allows you to avoid directly referencing objects and use special reference objects that the garbage collector easily clears.

23 - what does docker swarm do
1-worker node availibility
2-resource utilization
3-container scheduling
4-container fail-over or self-healing

24 - what is docker traefik ingress controller
>>Simplify networking, secure your APIs, and reduce the costs of managing your microservices with a dynamic, production-ready Kubernetes Ingress routing solution.

25 - what is docker node maintaince and types

>>A swarm consists of one or more nodes: physical or virtual machines running Docker Engine 1.12 or later in swarm mode. There are two types of nodes: managers and workers.

26 - what is docker swarm config

>>Docker swarm service configs allow you to store non-sensitive information, such as configuration files, outside a service's image or running containers. 
This allows you to keep your images as generic as possible, without the need to bind-mount configuration files into the containers or use environment variables

27 - what is docker swarm secrets

>>In terms of Docker Swarm services, a secret is a blob of data, such as a password, SSH private key, SSL certificate, or another piece of data that should not 
be transmitted over a network or stored unencrypted in a Dockerfile or in your application's source code

28 - what is docker swarm helath checks

>>he Docker swarm health check ensures that the Docker service is running properly. A faulty service can cause a major incident!

29 - In terms of Docker, a bridge network uses a software bridge which allows containers connected to the same bridge network to communicate, 
while providing isolation from containers which are not connected to that bridge network

30 - what is the differnce between registry and repository 

>>registry inside have an repository, repository inside you can put multiple images

32 - Types of registery

>>Docker hub , AWS ECR, Azure ACR ,google GCR

33 - how many types to run docker in AWS
install docler in ec2 and run conatiner
run using AWS Elastic conatiners service(ECS)
Run using AWS ECS Fargate
Run Using AWS EKS

==================================================================Ansible===============================================================================

1 - 

















===========





1 - what is shell scripting in DevOps and what is Ansible and what is difference between shell-script and Ansible in DevOps purpose



2 - what is power-shell



3 - What is the Blue/Green Deployment Pattern


